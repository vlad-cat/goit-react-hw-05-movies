{"version":3,"file":"static/js/656.20203684.chunk.js","mappings":"sPACA,EAA8B,8BAA9B,EAAyH,2B,kBCyDzH,EApDiB,WACf,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAwCE,EAAAA,EAAAA,UAAS,IAAjD,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KACA,GAA0BJ,EAAAA,EAAAA,UAAS,IAAnC,eAAOK,EAAP,KAAcC,EAAd,KAoBA,OAlBAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAc,mCAAG,WAAMV,GAAN,uFAEnBM,GAAa,GAFM,UAIKK,EAAAA,EAAAA,IAAgBX,GAJrB,OAIbY,EAJa,OAKnBR,EAAgBQ,EAAUC,MALP,gDAOnBL,EAAS,KAAIM,SAPM,yBASnBR,GAAa,GATM,4EAAH,sDAapBI,EAAeV,EAEhB,GAAE,CAACA,KAGF,qBAASe,UAAWC,EAApB,UACGT,EAAMU,OAAS,IAAK,wDAAgCV,KACpDF,IAAa,SAACa,EAAA,EAAD,IACbf,GACCA,EAAagB,KAAI,SAAAN,GACf,OACE,2BACE,gBACEO,IACEP,EAAKQ,aAAL,yCACsCR,EAAKQ,cACvC,GAENC,IAAI,QACJC,MAAM,SAER,eAAGR,UAAWC,EAAd,UAAwCH,EAAKW,cAA7C,QACA,0BACE,sCADF,IACqBX,EAAKY,eAZnBZ,EAAKa,GAgBjB,MAGR,C,+LCtDKC,EAAW,+BACXC,EAAU,mCAEHC,EAAiB,mCAAG,oGACRC,EAAAA,EAAAA,IAAA,UAClBH,EADkB,uCACqBC,EADrB,oBADQ,cACzBG,EADyB,yBAIxBA,EAASC,KAAKC,SAJU,2CAAH,qDAOjBC,EAAc,mCAAG,WAAMC,GAAN,uFACLL,EAAAA,EAAAA,IAAA,UAClBH,EADkB,+BACaQ,EADb,oBAC8BP,EAD9B,+CADK,cACtBG,EADsB,yBAIrBA,EAASC,KAAKC,SAJO,2CAAH,sDAOdG,EAAe,mCAAG,2GAAOC,EAAP,+BAAkB,GAAlB,SACNP,EAAAA,EAAAA,IAAA,UAClBH,EADkB,kBACAU,EADA,oBACoBT,EADpB,oBADM,uBACrBI,EADqB,EACrBA,KADqB,kBAItBA,GAJsB,2CAAH,qDAOfrB,EAAe,mCAAG,2GAAO0B,EAAP,+BAAkB,GAAlB,SACNP,EAAAA,EAAAA,IAAA,UAClBH,EADkB,kBACAU,EADA,4BAC4BT,EAD5B,oBADM,uBACrBI,EADqB,EACrBA,KADqB,kBAItBA,GAJsB,2CAAH,qDAOfM,EAAe,mCAAG,2GAAOD,EAAP,+BAAkB,GAAlB,SACNP,EAAAA,EAAAA,IAAA,UAClBH,EADkB,kBACAU,EADA,4BAC4BT,EAD5B,2BADM,uBACrBI,EADqB,EACrBA,KADqB,kBAItBA,GAJsB,2CAAH,oD","sources":["webpack://goit-react-hw-05-movies/./src/components/Cast/CastPage.module.css?1486","components/Cast/CastPage.jsx","services/api.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"castSection\":\"CastPage_castSection__gQWsv\",\"characterTitle\":\"CastPage_characterTitle__w0mVx\",\"castName\":\"CastPage_castName__IZsk3\"};","import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getMovieCredits } from 'services/api';\nimport castPageStyles from './CastPage.module.css';\nimport Loader from 'components/Loader/Loader';\n\nconst CastPage = () => {\n  const { movieId } = useParams();\n  const [movieCredits, setMovieCredits] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState('');\n\n  useEffect(() => {\n    const fetchMovieCast = async movieId => {\n      try {\n        setIsLoading(true);\n\n        const movieCast = await getMovieCredits(movieId);\n        setMovieCredits(movieCast.cast);\n      } catch (err) {\n        setError(err.message);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    fetchMovieCast(movieId);\n    // eslint-disable-next-line\n  }, [movieId]);\n\n  return (\n    <section className={castPageStyles.castSection}>\n      {error.length > 0 && <p>Upss, Some error occured... {error}</p>}\n      {isLoading && <Loader />}\n      {movieCredits &&\n        movieCredits.map(cast => {\n          return (\n            <li key={cast.id}>\n              <img\n                src={\n                  cast.profile_path\n                    ? `https://image.tmdb.org/t/p/w500${cast.profile_path}`\n                    : ''\n                }\n                alt=\"actor\"\n                width=\"150\"\n              />\n              <p className={castPageStyles.castName}>{cast.original_name} </p>\n              <p>\n                <b>Character:</b> {cast.character}\n              </p>\n            </li>\n          );\n        })}\n    </section>\n  );\n};\n\nexport default CastPage;\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = '04fcc8e75a3911b063e5ccbc7ad56d84';\n\nexport const getTrendingMovies = async () => {\n  const response = await axios.get(\n    `${BASE_URL}/trending/movie/day?api_key=${API_KEY}&language=en-GB`\n  );\n  return response.data.results;\n};\n\nexport const getSearchMovie = async query => {\n  const response = await axios.get(\n    `${BASE_URL}/search/movie?query=${query}&api_key=${API_KEY}&language=en-US&page=1&include_adult=false`\n  );\n  return response.data.results;\n};\n\nexport const getMovieDetails = async (movie_id = '') => {\n  const { data } = await axios.get(\n    `${BASE_URL}/movie/${movie_id}?api_key=${API_KEY}&language=en-GB`\n  );\n  return data;\n};\n\nexport const getMovieCredits = async (movie_id = '') => {\n  const { data } = await axios.get(\n    `${BASE_URL}/movie/${movie_id}/credits?api_key=${API_KEY}&language=en-GB`\n  );\n  return data;\n};\n\nexport const getMovieReviews = async (movie_id = '') => {\n  const { data } = await axios.get(\n    `${BASE_URL}/movie/${movie_id}/reviews?api_key=${API_KEY}&language=en-GB&page=1`\n  );\n  return data;\n};\n"],"names":["movieId","useParams","useState","movieCredits","setMovieCredits","isLoading","setIsLoading","error","setError","useEffect","fetchMovieCast","getMovieCredits","movieCast","cast","message","className","castPageStyles","length","Loader","map","src","profile_path","alt","width","original_name","character","id","BASE_URL","API_KEY","getTrendingMovies","axios","response","data","results","getSearchMovie","query","getMovieDetails","movie_id","getMovieReviews"],"sourceRoot":""}